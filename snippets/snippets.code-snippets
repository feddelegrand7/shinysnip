{
    "create a fluidPage empty template": {
        "prefix": "!fluidPage",
        "body": [
            "ui <- fluidPage(",
            "",
            "${1}",
            "",
            ")",
            "",
            "server <- function(input, output, session){",
            "",
            "${2}",
            "",
            "}",
            "",
            "",
            "",
            "shinyApp(ui = ui, server = server)"
        ],
        "description": "Creates Shiny fluidPage starter template"
    },
    "Create a sidebarLayout template": {
        "prefix": "!sidebarLayout",
        "body": [
            "sidebarLayout(",
            "",
            "sidebarPanel(",
            "",
            "${1}",
            "",
            "),",
            "mainPanel(",
            "",
            "${2}",
            "",
            "),",
            "position = \"left\", # The position of the sidebar relative to the main area (\"left\" or \"right\").",
            "fluid = TRUE",
            "",
            ")"
        ],
        "description": "Creates an empty sidebar layout"
    },
    "Create a textInput template": {
        "prefix": "!textInput",
        "body": [
            "textInput(inputId = \"${1}\", label = \"${2}\" , value = \"${3}\", width = NULL, placeholder = NULL)",
        ],
        "description": "Creates a textInput template with all its arguments. Text inputs are used to collect text data from end users"
    },
    "Create a numericInput template": {
        "prefix": "!numericInput",
        "body": [
            "numericInput(inputId = \"${1}\", label = \"${2}\", value = ${3}, min = ${4:NA}, max = ${5:NA}, step = ${6:NA}, width = NULL)"
        ],
        "description": "Shiny numeric inputs are used to collect numeric information from the end user"
    },
    "Create a sliderInput template": {
        "prefix": "!sliderInput",
        "body": [
            "sliderInput(inputId = \"${1}\", label = \"${2}\", min = ${3}, max = ${4}, value = ${5}, step = ${6:NULL})"
        ],
        "description": "Creates a slider widget in which the user can provide a numeric value within a predefined range"
    },
    "Create a full sliderInput template with all its arguments": {
        "prefix": "!sliderInputF",
        "body": [
            "sliderInput(",
            "inputId = \"${1}\",",
            "label = \"${2}\",",
            "min = ${3},",
            "max = ${4},",
            "value = ${5},",
            "step = ${6:NULL},",
            "round = ${7:FALSE},",
            "format = ${8:NULL},",
            "locale = ${9:NULL},",
            "ticks = ${10:TRUE},",
            "animate = ${11:FALSE},",
            "width = ${12:NULL},",
            "sep = \"${13:,}\",",
            "pre = ${14:NULL},",
            "post = ${15:NULL},",
            "timeFormat = ${16:NULL},",
            "timezone = ${17:NULL},",
            "dragRange = ${18:TRUE})"
        ],
        "description": "Creates a fully fledged sliderInput. For a more compact widget see '!sliderInput'"
    },
    "Create a navlistPanel template": {
        "prefix": "!navlistPanel",
        "body": [
            "titlePanel(\"${1}\"),",
            "",
            "navlistPanel(id = NULL, selected = NULL, well = TRUE, fluid = TRUE, widths = c(3,9),",
            "",
            "\"${2:My Awesome Header}\",",
            "",
            "tabPanel(\"${3:Panel1}\", \"${4:Panel1 Content ...}\"),",
            "tabPanel(\"${5:Panel2}\", \"${6:Panel2 Content ...}\"),",
            "tabPanel(\"${7:Panel3}\", \"${8:Panel3 Content ...}\"))"
        ],
        "description": "Creates a navigation list panel linked to predefined tab panels"
    },
    "Create a full parameters dateInput template": {
        "prefix": "!dateInputF",
        "body": [
            "dateInput(inputId = \"${1}\", ",
            "label = \"${2}\", ",
            "value = ${3:NULL}, ",
            "min = ${4:NULL}, ",
            "max = ${5:NULL}, ",
            "format = \"${6:yyyy-mm-dd}\",",
            "startview = \"${7:month}\", ",
            "weekstart = ${8:0}, ",
            "language = \"${9:en}\", ",
            "width = ${10:NULL})"
        ],
        "description": "Creates a full parameterized date input allowing the user to pick a date from a calendar"
    },
    "Create a compact dateInput template": {
        "prefix": "!dateInput",
        "body": [
            "dateInput(inputId = \"${1}\", label = \"${2}\", value = ${3:NULL}, min = ${4:NULL}, max = ${5:NULL})"
        ],
        "description": "Creates a compact date input allowing the user to pick a date from a calendar"
    },
    "Create a checkboxInput input template": {
        "prefix": "!checkboxInput",
        "body": [
            "checkboxInput(inputId = \"${1}\", label = \"${2}\", value = ${3:FALSE}, width = ${4:NULL})"
        ],
        "description": "Creates a checkboxInput in which the user can switch between TRUE or FALSE"
    },
    "Create a checkboxGroupInput full template": {
        "prefix": "!checkboxGF",
        "body": [
            "checkboxGroupInput(inputId = \"${1}\",",
            "label = \"${2}\",",
            "choices = ${3:NULL},",
            "selected = ${4:NULL}),",
            "inline = ${5:FALSE},",
            "width = ${6:NULL},",
            "choiceNames = ${7:NULL},",
            "choiceValues = ${8:NULL})"
        ],
        "description": "Creates a full parametrized checkboxGroupInput in which the user can choose from several option"
    },
    "Create a checkboxGroupInput compact template": {
        "prefix": "!checkboxG",
        "body": [
            "checkboxGroupInput(inputId = \"${1}\",",
            "label = \"${2}\",",
            "choices = ${3},",
            "selected = ${4}),",
            "inline = ${5:FALSE},",
            "width = ${6:NULL},",
            "choiceNames = ${7:NULL},",
            "choiceValues = ${8:NULL})"
        ],
        "description": "Creates a compact checkboxGroupInput in which the user can choose from several option"
    },
    "Create a fileInput template": {
        "prefix": "!fileInput",
        "body": [
            "fileInput(",
            "inputId = \"${1}\",",
            "label = \"${2}\",",
            "multiple = ${3:FALSE},",
            "accept = ${4:NULL},",
            "width = ${5:NULL},",
            "buttonLabel = \"${6:Browse...}\",",
            "placeholder = \"${7:No file selected}\")"
        ],
        "description": "Creates a fileInput widget in which the user can upload specific types of files"
    },
    "Create a selectInput template": {
        "prefix": "!selectInput",
        "body": [
            "selectInput(",
            "inputId = \"${1}\",",
            "label = \"${2}\",",
            "choices = ${3},",
            "selected = ${4:NULL},",
            "multiple = ${5:FALSE},",
            "selectize = ${6:TRUE},",
            "width = ${7:NULL},",
            "size = ${8:NULL})"
        ],
        "description": "Creates a selectInput widget allowing the user to select stuffs from different options"
    },
    "Create a textAreaInput full template": {
        "prefix": "!textAreaInputF",
        "body": [
            "textAreaInput(",
            "inputId = \"${1}\",",
            "label = \"${2}\",",
            "value = \"${3}\",",
            "width = ${4:NULL},",
            "height = ${5:NULL},",
            "cols = ${6:NULL},",
            "rows = ${7:NULL},",
            "placeholder = ${8:NULL},",
            "resize = ${9:NULL})"
        ],
        "description": "Creates a fully parameterized textAreaInput in which the user can type a few lines of text"
    },
    "Create a textAreaInput compact template": {
        "prefix": "!textAreaInput",
        "body": [
            "textAreaInput(",
            "inputId = \"${1}\",",
            "label = \"${2}\",",
            "value = \"${3}\")",
        ],
        "description": "Creates a compact textAreaInput in which the user can type a few lines of text"
    },
    "Create passwordInput template": {
        "prefix": "!passwordInput",
        "body": [
            "passwordInput(inputId = \"${1}\", label = \"${2}\", width = ${3:NULL}, placeholder = ${4:NULL})"
        ],
        "description": "Creates a template for the passwordInput widget which is used for entry of passwords"
    },
    "Create a varSelectInput full template": {
        "prefix": "!varSelectInputF",
        "body": [
            "varSelectInput(",
            "inputId = \"${1}\",",
            "label = \"${2}\",",
            "data = ${3},",
            "selected = ${4:NULL},",
            "multiple = ${5:FALSE},",
            "selectize = ${6:TRUE},",
            "width = ${7:NULL},",
            "size = ${8:NULL})"
        ],
        "description": "Creates a fully parameterized varSelectInput which is used to allow the user to select a column from a data frame"
    },
    "Create a varSelectInput compact template": {
        "prefix": "!varSelectInputF",
        "body": [
            "varSelectInput(",
            "inputId = \"${1}\",",
            "label = \"${2}\",",
            "data = ${3})",
        ],
        "description": "Creates a compact varSelectInput which is used to allow the user to select a column from a data frame"
    },
    "Create a radioButtons full template": {
        "prefix": "!radioButtonsF",
        "body": [
            "radioButtons(",
            "inputId = \"${1}\",",
            "label = \"${2}\",",
            "choices = ${3:NULL},",
            "selected = ${4:NULL},",
            "inline = ${5:FALSE},",
            "width = ${6:NULL},",
            "choiceNames = ${7:NULL},",
            "choiceValues = ${8:NULL})"
        ],
        "description": "Creates a fully parameterized radioButtons widget allowing the user to select an item from a set of items"
    },
    "Create a radioButtons compact template": {
        "prefix": "!radioButtonsF",
        "body": [
            "radioButtons(",
            "inputId = \"${1}\",",
            "label = \"${2}\",",
            "choices = ${3:NULL},",
            "selected = ${4:NULL})",
        ],
        "description": "Creates a compact radioButtons widget allowing the user to select an item from a set of items"
    },
    "Create a plotOutput template": {
        "prefix": "!plotOutput",
        "body": [
            "# Must be set within the UI",
            "plotOutput(",
            "outputId = \"${1}\",",
            "width = \"${2:100%}\",",
            "height = \"${3:400px}\",",
            "click = ${4:NULL},",
            "dblclick = ${5:NULL},",
            "hover = ${6:NULL},",
            "brush = ${7:NULL},",
            "inline = ${8:FALSE})",
            "",
            "# Must be set within the server",
            "output\\$${1} <- renderPlot({",
            "",
            "",
            "})"
        ],
        "description": "Creates a plotOutput template"
    },
    "Create an imageOutput template": {
        "prefix": "!imageOutput",
        "body": [
            "# Must be set within the UI",
            "imageOutput(",
            "outputId = \"${1}\",",
            "width = \"${2:100%}\",",
            "height = \"${3:400px}\",",
            "click = ${4:NULL},",
            "dblclick = ${5:NULL},",
            "hover = ${6:NULL},",
            "brush = ${7:NULL},",
            "inline = ${8:FALSE})",
            "",
            "# Must be set within the server",
            "output\\$${1} <- renderImage({",
            "expr = ${9}",
            "env = parent.frame()",
            "quoted = ${10:FALSE}",
            "deleteFile = ${11}",
            "outputArgs = ${12:list()}",
            "})"
        ],
        "description": "Creates an imageOutput template"
    }
}